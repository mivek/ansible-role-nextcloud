---
# tasks file for ansible-role-nextcloud

- name: Downlad the archive
  ansible.builtin.get_url:
    url: "{{ __nextcloud_download_url }}"
    checksum: "md5:{{ __nextcloud_md5_url }}"
    dest: "{{ __nextcloud_download_dest }}"
    owner: "{{ nextcloud_webserver_user }}"
    group: "{{ nextcloud_webserver_group }}"
    mode: "0750"

- name: "Make sure {{ nextcloud_server_location }} exists"
  ansible.builtin.file:
    path: "{{ nextcloud_server_location }}"
    owner: "{{ nextcloud_webserver_user }}"
    group: "{{ nextcloud_webserver_group }}"
    mode: "0750"
    state: directory

- name: Unarchive the archive
  ansible.builtin.unarchive:
    src: "{{ __nextcloud_download_dest }}"
    dest: "{{ nextcloud_server_location }}"
    owner: "{{ nextcloud_webserver_user }}"
    group: "{{ nextcloud_webserver_group }}"
    mode: "0750"
    remote_src: true
  tags:
      - molecule-idempotence-notest

- name: Create the data directory if needed
  ansible.builtin.file:
    path: "{{ nextcloud_data_directory }}"
    owner: "{{ nextcloud_webserver_user }}"
    group: "{{ nextcloud_webserver_group }}"
    mode: "0750"
    state: directory

- name: Run the installation command
  ansible.builtin.command:
    cmd: >
      {{ nextcloud_php_executable }} occ maintenance:install
      --database {{ nextcloud_database_type }}
      --database-name {{ nextcloud_database_name }}
      --database-user {{ nextcloud_database_user }}
      --database-pass {{ nextcloud_database_password }}
      --admin-user {{ nextcloud_admin_user }}
      --admin-pass {{ nextcloud_admin_password }}
      --data-dir {{ nextcloud_data_directory }}
      --no-interaction
    chdir: "{{ __nextcloud_installation_directory }}"
  become_user: "{{ nextcloud_webserver_user }}"
  become: yes
  changed_when: false
  tags:
    - molecule-idempotence-notest

- name: Configuration
  ansible.builtin.command:
    cmd: "{{ nextcloud_php_executable }} occ config:system:set {{ setting.name }} --value=\"{{ setting.value }}\" --type={{ setting.type|default('string') }}"
    chdir: "{{ __nextcloud_installation_directory }}"
  become_user: "{{ nextcloud_webserver_user }}"
  become: yes
  changed_when: false
  loop: "{{ nextcloud_settings }}"
  loop_control:
    loop_var: setting

- name: Set the trusted_domains
  ansible.builtin.command:
    cmd: "{{ nextcloud_php_executable }} occ config:system:set trusted_domains {{ index }} --value={{ domain }}"
    chdir: "{{ __nextcloud_installation_directory }}"
  become_user: "{{ nextcloud_webserver_user }}"
  changed_when: false
  become: yes
  loop: "{{ nextcloud_trusted_domains }}"
  loop_control:
    loop_var: domain
    index_var: index

- name: Configure redis
  ansible.builtin.command:
    cmd: "{{ nextcloud_php_executable }} occ config:system:set redis {{ item.key }} --value={{ item.value }}"
    chdir: "{{ __nextcloud_installation_directory }}"
  become_user: "{{ nextcloud_webserver_user }}"
  become: yes
  changed_when: false
  loop: "{{ nextcloud_redis | dict2items }}"
  when: nextcloud_redis is defined and nextcloud_redis

- name: Add the missing indices
  ansible.builtin.command:
    cmd: "{{ nextcloud_php_executable }} occ db:add-missing-indices"
    chdir: "{{ __nextcloud_installation_directory }}"
  become_user: "{{ nextcloud_webserver_user }}"
  become: yes
  changed_when: false

- name: Install applications
  ansible.builtin.command:
    cmd: "{{ nextcloud_php_executable }} occ app:install {{ item }}"
    chdir: "{{ __nextcloud_installation_directory }}"
  become_user: "{{ nextcloud_webserver_user }}"
  become: yes
  changed_when: false
  loop: "{{ nextcloud_apps }}"

- name: Configure applications
  ansible.builtin.command:
    cmd: "{{ nextcloud_php_executable }} occ config:app:set {{ item.app_name }} {{ item.config_name }} --value=\"{{ item.value }}\" --type={{ item.type | default('string') }}"
    chdir: "{{ __nextcloud_installation_directory }}"
  become_user: "{{ nextcloud_webserver_user }}"
  become: yes
  changed_when: false
  loop: "{{ nextcloud_apps_settings }}"

- name: Setting the background job to cron
  ansible.builtin.command:
    cmd: "{{ nextcloud_php_executable }} occ background:cron"
    chdir: "{{ __nextcloud_installation_directory }}"
  become_user: "{{ nextcloud_webserver_user }}"
  become: yes
  changed_when: false

- name: Add the cron job
  ansible.builtin.cron:
    job: "{{ nextcloud_php_executable }} -f {{ __nextcloud_installation_directory }}/cron.php"
    minute: "*/5"
    name: nextcloud_cron
    state: present
    user: "{{ nextcloud_webserver_user }}"

- name: Template the nginx configuration
  ansible.builtin.template:
    src: "{{ nextcloud_nginx_template }}"
    dest: "{{ nextcloud_nginx_configuration }}"
    owner: "{{ nextcloud_webserver_user }}"
    group: "{{ nextcloud_webserver_group }}"
    mode: "0640"
  when: nextcloud_nginx_template is defined and nextcloud_nginx_template
  notify: restart_webserver
